{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContentAssist = void 0;\n\nvar interpreter_1 = require(\"../../grammar/interpreter\");\n\nvar first_1 = __importDefault(require(\"lodash/first\"));\n\nvar isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\n\nvar ContentAssist =\n/** @class */\nfunction () {\n  function ContentAssist() {}\n\n  ContentAssist.prototype.initContentAssist = function () {};\n\n  ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n    var startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if ((0, isUndefined_1.default)(startRuleGast)) {\n      throw Error(\"Rule ->\".concat(startRuleName, \"<- does not exist in this grammar.\"));\n    }\n\n    return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n  }; // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n\n\n  ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n    var topRuleName = (0, first_1.default)(grammarPath.ruleStack);\n    var gastProductions = this.getGAstProductions();\n    var topProduction = gastProductions[topRuleName];\n    var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n    return nextPossibleTokenTypes;\n  };\n\n  return ContentAssist;\n}();\n\nexports.ContentAssist = ContentAssist;","map":{"version":3,"sources":["../../../../../src/parse/parser/traits/context_assist.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,IAAA,aAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAIA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAGA,IAAA,aAAA;AAAA;AAAA,YAAA;EAAA,SAAA,aAAA,GAAA,CAqCC;;EApCC,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA,CAAsB,CAAtB;;EAEO,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,UAEE,aAFF,EAGE,cAHF,EAG0B;IAExB,IAAM,aAAa,GAAG,KAAK,oBAAL,CAA0B,aAA1B,CAAtB;;IAEA,IAAI,CAAA,GAAA,aAAA,CAAA,OAAA,EAAY,aAAZ,CAAJ,EAAgC;MAC9B,MAAM,KAAK,CAAC,UAAA,MAAA,CAAU,aAAV,EAAuB,oCAAvB,CAAD,CAAX;IACD;;IAED,OAAO,CAAA,GAAA,aAAA,CAAA,uBAAA,EACL,CAAC,aAAD,CADK,EAEL,cAFK,EAGL,KAAK,YAHA,EAIL,KAAK,YAJA,CAAP;EAMD,CAjBM,CAHT,CAsBE;EACA;;;EACO,aAAA,CAAA,SAAA,CAAA,yBAAA,GAAP,UAEE,WAFF,EAEgC;IAE9B,IAAM,WAAW,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EAAM,WAAW,CAAC,SAAlB,CAApB;IACA,IAAM,eAAe,GAAG,KAAK,kBAAL,EAAxB;IACA,IAAM,aAAa,GAAG,eAAe,CAAC,WAAD,CAArC;IACA,IAAM,sBAAsB,GAAG,IAAI,aAAA,CAAA,oBAAJ,CAC7B,aAD6B,EAE7B,WAF6B,EAG7B,YAH6B,EAA/B;IAIA,OAAO,sBAAP;EACD,CAZM;;EAaT,OAAA,aAAA;AAAC,CArCD,EAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContentAssist = void 0;\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar first_1 = __importDefault(require(\"lodash/first\"));\nvar isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache[startRuleName];\n        if ((0, isUndefined_1.default)(startRuleGast)) {\n            throw Error(\"Rule ->\".concat(startRuleName, \"<- does not exist in this grammar.\"));\n        }\n        return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = (0, first_1.default)(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions[topRuleName];\n        var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\nexports.ContentAssist = ContentAssist;\n//# sourceMappingURL=context_assist.js.map"]},"metadata":{},"sourceType":"script"}