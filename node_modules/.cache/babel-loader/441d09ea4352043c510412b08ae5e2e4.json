{"ast":null,"code":"import _objectSpread from \"/Users/khuong/Desktop/2022/ReactJS/scrollcontrols-gltf/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/khuong/Desktop/2022/ReactJS/scrollcontrols-gltf/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/khuong/Desktop/2022/ReactJS/scrollcontrols-gltf/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"mixBlur\", \"mixStrength\", \"resolution\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"distortionMap\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, Vector2 } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\nvar MIPMAP_NUM = 8;\nvar Reflector = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n      mixBlur = _ref$mixBlur === void 0 ? 0.0 : _ref$mixBlur,\n      _ref$mixStrength = _ref.mixStrength,\n      mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$args = _ref.args,\n      args = _ref$args === void 0 ? [1, 1] : _ref$args,\n      _ref$minDepthThreshol = _ref.minDepthThreshold,\n      minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n      _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n      maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n      _ref$depthScale = _ref.depthScale,\n      depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n      _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n      depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n      mirror = _ref.mirror,\n      children = _ref.children,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? 0 : _ref$debug,\n      _ref$distortion = _ref.distortion,\n      distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n      distortionMap = _ref.distortionMap,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var scene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  });\n  var meshRef = React.useRef(null);\n\n  var _React$useState = React.useState(function () {\n    return new Plane();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      reflectorPlane = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      normal = _React$useState4[0];\n\n  var _React$useState5 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      reflectorWorldPosition = _React$useState6[0];\n\n  var _React$useState7 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      cameraWorldPosition = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    return new Matrix4();\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      rotationMatrix = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return new Vector3(0, 0, -1);\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      lookAtPosition = _React$useState12[0];\n\n  var _React$useState13 = React.useState(function () {\n    return new Vector4();\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 1),\n      clipPlane = _React$useState14[0];\n\n  var _React$useState15 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 1),\n      view = _React$useState16[0];\n\n  var _React$useState17 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 1),\n      target = _React$useState18[0];\n\n  var _React$useState19 = React.useState(function () {\n    return new Vector4();\n  }),\n      _React$useState20 = _slicedToArray(_React$useState19, 1),\n      q = _React$useState20[0];\n\n  var _React$useState21 = React.useState(function () {\n    return new Matrix4();\n  }),\n      _React$useState22 = _slicedToArray(_React$useState21, 1),\n      textureMatrix = _React$useState22[0];\n\n  var _React$useState23 = React.useState(function () {\n    return new PerspectiveCamera();\n  }),\n      _React$useState24 = _slicedToArray(_React$useState23, 1),\n      virtualCamera = _React$useState24[0];\n\n  var _React$useState25 = React.useState(function () {\n    var renderTargets = [];\n    var pars = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n\n    for (var i = 0; i < MIPMAP_NUM; i++) {\n      var res = Math.max(8, Math.round(resolution / Math.pow(2, i)));\n      var renderTarget = new WebGLRenderTarget(res, res, pars);\n      renderTarget.texture.generateMipmaps = false;\n      renderTargets.push(renderTarget);\n    }\n\n    return renderTargets;\n  }),\n      _React$useState26 = _slicedToArray(_React$useState25, 1),\n      renderTargets = _React$useState26[0];\n\n  var beforeRender = React.useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera.far, camera.matrixWorld, camera.projectionMatrix, cameraWorldPosition, clipPlane, lookAtPosition, normal, q, reflectorPlane, reflectorWorldPosition, rotationMatrix, target, textureMatrix, view, virtualCamera]);\n\n  var _React$useMemo = React.useMemo(function () {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n\n    if (depthScale > 0) {\n      fbo1.depthBuffer = true;\n      fbo1.depthTexture = new DepthTexture(resolution, resolution);\n      fbo1.depthTexture.format = DepthFormat;\n      fbo1.depthTexture.type = UnsignedShortType;\n    }\n\n    var mipmaps = renderTargets.reduce(function (acc, fbo, index) {\n      acc[\"u_mipmap_\".concat(index)] = fbo.texture;\n      acc[\"u_mipmap_res_\".concat(index)] = new Vector2(fbo.width, fbo.height);\n      return acc;\n    }, {});\n\n    var reflectorProps = _objectSpread({\n      mirror: mirror,\n      textureMatrix: textureMatrix,\n      mixBlur: mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      mixStrength: mixStrength,\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias,\n      debug: debug,\n      distortion: distortion,\n      distortionMap: distortionMap,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    }, mipmaps);\n\n    return [fbo1, reflectorProps];\n  }, [gl, textureMatrix, resolution, mirror, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, renderTargets]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      fbo1 = _React$useMemo2[0],\n      reflectorProps = _React$useMemo2[1];\n\n  useFrame(function () {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    var currentXrEnabled = gl.xr.enabled;\n    var currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n\n    if (mixBlur !== 0) {\n      renderTargets.forEach(function (fbo) {\n        gl.setRenderTarget(fbo);\n        gl.state.buffers.depth.setMask(true);\n        gl.render(scene, virtualCamera);\n      });\n    }\n\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\nexport { Reflector };","map":{"version":3,"names":["_extends","React","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","LinearFilter","RGBFormat","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","Vector2","extend","useThree","useFrame","mergeRefs","MeshReflectorMaterial","MIPMAP_NUM","Reflector","forwardRef","ref","mixBlur","mixStrength","resolution","args","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","mirror","children","debug","distortion","distortionMap","props","gl","camera","scene","meshRef","useRef","useState","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","renderTargets","pars","minFilter","magFilter","format","encoding","outputEncoding","i","res","Math","max","round","pow","renderTarget","texture","generateMipmaps","push","beforeRender","useCallback","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","sign","elements","w","multiplyScalar","useMemo","parameters","fbo1","depthBuffer","depthTexture","type","mipmaps","reduce","acc","fbo","index","width","height","reflectorProps","tDiffuse","tDepth","undefined","visible","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","forEach","createElement"],"sources":["/Users/khuong/Desktop/2022/ReactJS/scrollcontrols-gltf/node_modules/@react-three/drei/core/Reflector.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, Vector2 } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nconst MIPMAP_NUM = 8;\nconst Reflector = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0.0,\n  mixStrength = 0.5,\n  resolution = 256,\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror,\n  children,\n  debug = 0,\n  distortion = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const meshRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const [renderTargets] = React.useState(() => {\n    const renderTargets = [];\n    const pars = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n\n    for (let i = 0; i < MIPMAP_NUM; i++) {\n      const res = Math.max(8, Math.round(resolution / Math.pow(2, i)));\n      const renderTarget = new WebGLRenderTarget(res, res, pars);\n      renderTarget.texture.generateMipmaps = false;\n      renderTargets.push(renderTarget);\n    }\n\n    return renderTargets;\n  });\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera.far, camera.matrixWorld, camera.projectionMatrix, cameraWorldPosition, clipPlane, lookAtPosition, normal, q, reflectorPlane, reflectorWorldPosition, rotationMatrix, target, textureMatrix, view, virtualCamera]);\n  const [fbo1, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n\n    if (depthScale > 0) {\n      fbo1.depthBuffer = true;\n      fbo1.depthTexture = new DepthTexture(resolution, resolution);\n      fbo1.depthTexture.format = DepthFormat;\n      fbo1.depthTexture.type = UnsignedShortType;\n    }\n\n    const mipmaps = renderTargets.reduce((acc, fbo, index) => {\n      acc[`u_mipmap_${index}`] = fbo.texture;\n      acc[`u_mipmap_res_${index}`] = new Vector2(fbo.width, fbo.height);\n      return acc;\n    }, {});\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      debug,\n      distortion,\n      distortionMap,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined,\n      ...mipmaps\n    };\n    return [fbo1, reflectorProps];\n  }, [gl, textureMatrix, resolution, mirror, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, renderTargets]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n\n    if (mixBlur !== 0) {\n      renderTargets.forEach(fbo => {\n        gl.setRenderTarget(fbo);\n        gl.state.buffers.depth.setMask(true);\n        gl.render(scene, virtualCamera);\n      });\n    }\n\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}