{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTokenType = exports.hasExtendingTokensTypesMapProperty = exports.hasExtendingTokensTypesProperty = exports.hasCategoriesProperty = exports.hasShortKeyProperty = exports.singleAssignCategoriesToksMap = exports.assignCategoriesMapProp = exports.assignCategoriesTokensProp = exports.assignTokenDefaultProps = exports.expandCategories = exports.augmentTokenTypes = exports.tokenIdxToClass = exports.tokenShortNameIdx = exports.tokenStructuredMatcherNoCategories = exports.tokenStructuredMatcher = void 0;\n\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\n\nvar compact_1 = __importDefault(require(\"lodash/compact\"));\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\n\nvar difference_1 = __importDefault(require(\"lodash/difference\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\n\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\n\nfunction tokenStructuredMatcher(tokInstance, tokConstructor) {\n  var instanceType = tokInstance.tokenTypeIdx;\n\n  if (instanceType === tokConstructor.tokenTypeIdx) {\n    return true;\n  } else {\n    return tokConstructor.isParent === true && tokConstructor.categoryMatchesMap[instanceType] === true;\n  }\n}\n\nexports.tokenStructuredMatcher = tokenStructuredMatcher; // Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\n\nfunction tokenStructuredMatcherNoCategories(token, tokType) {\n  return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\n\nexports.tokenStructuredMatcherNoCategories = tokenStructuredMatcherNoCategories;\nexports.tokenShortNameIdx = 1;\nexports.tokenIdxToClass = {};\n\nfunction augmentTokenTypes(tokenTypes) {\n  // collect the parent Token Types as well.\n  var tokenTypesAndParents = expandCategories(tokenTypes); // add required tokenType and categoryMatches properties\n\n  assignTokenDefaultProps(tokenTypesAndParents); // fill up the categoryMatches\n\n  assignCategoriesMapProp(tokenTypesAndParents);\n  assignCategoriesTokensProp(tokenTypesAndParents);\n  (0, forEach_1.default)(tokenTypesAndParents, function (tokType) {\n    tokType.isParent = tokType.categoryMatches.length > 0;\n  });\n}\n\nexports.augmentTokenTypes = augmentTokenTypes;\n\nfunction expandCategories(tokenTypes) {\n  var result = (0, clone_1.default)(tokenTypes);\n  var categories = tokenTypes;\n  var searching = true;\n\n  while (searching) {\n    categories = (0, compact_1.default)((0, flatten_1.default)((0, map_1.default)(categories, function (currTokType) {\n      return currTokType.CATEGORIES;\n    })));\n    var newCategories = (0, difference_1.default)(categories, result);\n    result = result.concat(newCategories);\n\n    if ((0, isEmpty_1.default)(newCategories)) {\n      searching = false;\n    } else {\n      categories = newCategories;\n    }\n  }\n\n  return result;\n}\n\nexports.expandCategories = expandCategories;\n\nfunction assignTokenDefaultProps(tokenTypes) {\n  (0, forEach_1.default)(tokenTypes, function (currTokType) {\n    if (!hasShortKeyProperty(currTokType)) {\n      exports.tokenIdxToClass[exports.tokenShortNameIdx] = currTokType;\n      currTokType.tokenTypeIdx = exports.tokenShortNameIdx++;\n    } // CATEGORIES? : TokenType | TokenType[]\n\n\n    if (hasCategoriesProperty(currTokType) && !(0, isArray_1.default)(currTokType.CATEGORIES) // &&\n    // !isUndefined(currTokType.CATEGORIES.PATTERN)\n    ) {\n      currTokType.CATEGORIES = [currTokType.CATEGORIES];\n    }\n\n    if (!hasCategoriesProperty(currTokType)) {\n      currTokType.CATEGORIES = [];\n    }\n\n    if (!hasExtendingTokensTypesProperty(currTokType)) {\n      currTokType.categoryMatches = [];\n    }\n\n    if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n      currTokType.categoryMatchesMap = {};\n    }\n  });\n}\n\nexports.assignTokenDefaultProps = assignTokenDefaultProps;\n\nfunction assignCategoriesTokensProp(tokenTypes) {\n  (0, forEach_1.default)(tokenTypes, function (currTokType) {\n    // avoid duplications\n    currTokType.categoryMatches = [];\n    (0, forEach_1.default)(currTokType.categoryMatchesMap, function (val, key) {\n      currTokType.categoryMatches.push(exports.tokenIdxToClass[key].tokenTypeIdx);\n    });\n  });\n}\n\nexports.assignCategoriesTokensProp = assignCategoriesTokensProp;\n\nfunction assignCategoriesMapProp(tokenTypes) {\n  (0, forEach_1.default)(tokenTypes, function (currTokType) {\n    singleAssignCategoriesToksMap([], currTokType);\n  });\n}\n\nexports.assignCategoriesMapProp = assignCategoriesMapProp;\n\nfunction singleAssignCategoriesToksMap(path, nextNode) {\n  (0, forEach_1.default)(path, function (pathNode) {\n    nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n  });\n  (0, forEach_1.default)(nextNode.CATEGORIES, function (nextCategory) {\n    var newPath = path.concat(nextNode); // avoids infinite loops due to cyclic categories.\n\n    if (!(0, includes_1.default)(newPath, nextCategory)) {\n      singleAssignCategoriesToksMap(newPath, nextCategory);\n    }\n  });\n}\n\nexports.singleAssignCategoriesToksMap = singleAssignCategoriesToksMap;\n\nfunction hasShortKeyProperty(tokType) {\n  return (0, has_1.default)(tokType, \"tokenTypeIdx\");\n}\n\nexports.hasShortKeyProperty = hasShortKeyProperty;\n\nfunction hasCategoriesProperty(tokType) {\n  return (0, has_1.default)(tokType, \"CATEGORIES\");\n}\n\nexports.hasCategoriesProperty = hasCategoriesProperty;\n\nfunction hasExtendingTokensTypesProperty(tokType) {\n  return (0, has_1.default)(tokType, \"categoryMatches\");\n}\n\nexports.hasExtendingTokensTypesProperty = hasExtendingTokensTypesProperty;\n\nfunction hasExtendingTokensTypesMapProperty(tokType) {\n  return (0, has_1.default)(tokType, \"categoryMatchesMap\");\n}\n\nexports.hasExtendingTokensTypesMapProperty = hasExtendingTokensTypesMapProperty;\n\nfunction isTokenType(tokType) {\n  return (0, has_1.default)(tokType, \"tokenTypeIdx\");\n}\n\nexports.isTokenType = isTokenType;","map":{"version":3,"sources":["../../../src/scan/tokens.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTokenType = exports.hasExtendingTokensTypesMapProperty = exports.hasExtendingTokensTypesProperty = exports.hasCategoriesProperty = exports.hasShortKeyProperty = exports.singleAssignCategoriesToksMap = exports.assignCategoriesMapProp = exports.assignCategoriesTokensProp = exports.assignTokenDefaultProps = exports.expandCategories = exports.augmentTokenTypes = exports.tokenIdxToClass = exports.tokenShortNameIdx = exports.tokenStructuredMatcherNoCategories = exports.tokenStructuredMatcher = void 0;\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nvar compact_1 = __importDefault(require(\"lodash/compact\"));\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\nvar difference_1 = __importDefault(require(\"lodash/difference\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\nvar has_1 = __importDefault(require(\"lodash/has\"));\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\nfunction tokenStructuredMatcher(tokInstance, tokConstructor) {\n    var instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\nexports.tokenStructuredMatcher = tokenStructuredMatcher;\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nfunction tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexports.tokenStructuredMatcherNoCategories = tokenStructuredMatcherNoCategories;\nexports.tokenShortNameIdx = 1;\nexports.tokenIdxToClass = {};\nfunction augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    var tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    (0, forEach_1.default)(tokenTypesAndParents, function (tokType) {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexports.augmentTokenTypes = augmentTokenTypes;\nfunction expandCategories(tokenTypes) {\n    var result = (0, clone_1.default)(tokenTypes);\n    var categories = tokenTypes;\n    var searching = true;\n    while (searching) {\n        categories = (0, compact_1.default)((0, flatten_1.default)((0, map_1.default)(categories, function (currTokType) { return currTokType.CATEGORIES; })));\n        var newCategories = (0, difference_1.default)(categories, result);\n        result = result.concat(newCategories);\n        if ((0, isEmpty_1.default)(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexports.expandCategories = expandCategories;\nfunction assignTokenDefaultProps(tokenTypes) {\n    (0, forEach_1.default)(tokenTypes, function (currTokType) {\n        if (!hasShortKeyProperty(currTokType)) {\n            exports.tokenIdxToClass[exports.tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = exports.tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !(0, isArray_1.default)(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexports.assignTokenDefaultProps = assignTokenDefaultProps;\nfunction assignCategoriesTokensProp(tokenTypes) {\n    (0, forEach_1.default)(tokenTypes, function (currTokType) {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        (0, forEach_1.default)(currTokType.categoryMatchesMap, function (val, key) {\n            currTokType.categoryMatches.push(exports.tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexports.assignCategoriesTokensProp = assignCategoriesTokensProp;\nfunction assignCategoriesMapProp(tokenTypes) {\n    (0, forEach_1.default)(tokenTypes, function (currTokType) {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexports.assignCategoriesMapProp = assignCategoriesMapProp;\nfunction singleAssignCategoriesToksMap(path, nextNode) {\n    (0, forEach_1.default)(path, function (pathNode) {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    (0, forEach_1.default)(nextNode.CATEGORIES, function (nextCategory) {\n        var newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!(0, includes_1.default)(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexports.singleAssignCategoriesToksMap = singleAssignCategoriesToksMap;\nfunction hasShortKeyProperty(tokType) {\n    return (0, has_1.default)(tokType, \"tokenTypeIdx\");\n}\nexports.hasShortKeyProperty = hasShortKeyProperty;\nfunction hasCategoriesProperty(tokType) {\n    return (0, has_1.default)(tokType, \"CATEGORIES\");\n}\nexports.hasCategoriesProperty = hasCategoriesProperty;\nfunction hasExtendingTokensTypesProperty(tokType) {\n    return (0, has_1.default)(tokType, \"categoryMatches\");\n}\nexports.hasExtendingTokensTypesProperty = hasExtendingTokensTypesProperty;\nfunction hasExtendingTokensTypesMapProperty(tokType) {\n    return (0, has_1.default)(tokType, \"categoryMatchesMap\");\n}\nexports.hasExtendingTokensTypesMapProperty = hasExtendingTokensTypesMapProperty;\nfunction isTokenType(tokType) {\n    return (0, has_1.default)(tokType, \"tokenTypeIdx\");\n}\nexports.isTokenType = isTokenType;\n//# sourceMappingURL=tokens.js.map"]},"metadata":{},"sourceType":"script"}