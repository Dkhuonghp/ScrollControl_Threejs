{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.genDts = void 0;\n\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\n\nvar uniq_1 = __importDefault(require(\"lodash/uniq\"));\n\nvar upperFirst_1 = __importDefault(require(\"lodash/upperFirst\"));\n\nfunction genDts(model, options) {\n  var contentParts = [];\n  contentParts = contentParts.concat(\"import type { CstNode, ICstVisitor, IToken } from \\\"chevrotain\\\";\");\n  contentParts = contentParts.concat((0, flatten_1.default)((0, map_1.default)(model, function (node) {\n    return genCstNodeTypes(node);\n  })));\n\n  if (options.includeVisitorInterface) {\n    contentParts = contentParts.concat(genVisitor(options.visitorInterfaceName, model));\n  }\n\n  return contentParts.join(\"\\n\\n\") + \"\\n\";\n}\n\nexports.genDts = genDts;\n\nfunction genCstNodeTypes(node) {\n  var nodeCstInterface = genNodeInterface(node);\n  var nodeChildrenInterface = genNodeChildrenType(node);\n  return [nodeCstInterface, nodeChildrenInterface];\n}\n\nfunction genNodeInterface(node) {\n  var nodeInterfaceName = getNodeInterfaceName(node.name);\n  var childrenTypeName = getNodeChildrenTypeName(node.name);\n  return \"export interface \".concat(nodeInterfaceName, \" extends CstNode {\\n  name: \\\"\").concat(node.name, \"\\\";\\n  children: \").concat(childrenTypeName, \";\\n}\");\n}\n\nfunction genNodeChildrenType(node) {\n  var typeName = getNodeChildrenTypeName(node.name);\n  return \"export type \".concat(typeName, \" = {\\n  \").concat((0, map_1.default)(node.properties, function (property) {\n    return genChildProperty(property);\n  }).join(\"\\n  \"), \"\\n};\");\n}\n\nfunction genChildProperty(prop) {\n  var typeName = buildTypeString(prop.type);\n  return \"\".concat(prop.name).concat(prop.optional ? \"?\" : \"\", \": \").concat(typeName, \"[];\");\n}\n\nfunction genVisitor(name, nodes) {\n  return \"export interface \".concat(name, \"<IN, OUT> extends ICstVisitor<IN, OUT> {\\n  \").concat((0, map_1.default)(nodes, function (node) {\n    return genVisitorFunction(node);\n  }).join(\"\\n  \"), \"\\n}\");\n}\n\nfunction genVisitorFunction(node) {\n  var childrenTypeName = getNodeChildrenTypeName(node.name);\n  return \"\".concat(node.name, \"(children: \").concat(childrenTypeName, \", param?: IN): OUT;\");\n}\n\nfunction buildTypeString(type) {\n  if ((0, isArray_1.default)(type)) {\n    var typeNames = (0, uniq_1.default)((0, map_1.default)(type, function (t) {\n      return getTypeString(t);\n    }));\n    var typeString = (0, reduce_1.default)(typeNames, function (sum, t) {\n      return sum + \" | \" + t;\n    });\n    return \"(\" + typeString + \")\";\n  } else {\n    return getTypeString(type);\n  }\n}\n\nfunction getTypeString(type) {\n  if (type.kind === \"token\") {\n    return \"IToken\";\n  }\n\n  return getNodeInterfaceName(type.name);\n}\n\nfunction getNodeInterfaceName(ruleName) {\n  return (0, upperFirst_1.default)(ruleName) + \"CstNode\";\n}\n\nfunction getNodeChildrenTypeName(ruleName) {\n  return (0, upperFirst_1.default)(ruleName) + \"CstChildren\";\n}","map":{"version":3,"sources":["../../src/generate.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.genDts = void 0;\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\nvar uniq_1 = __importDefault(require(\"lodash/uniq\"));\nvar upperFirst_1 = __importDefault(require(\"lodash/upperFirst\"));\nfunction genDts(model, options) {\n    var contentParts = [];\n    contentParts = contentParts.concat(\"import type { CstNode, ICstVisitor, IToken } from \\\"chevrotain\\\";\");\n    contentParts = contentParts.concat((0, flatten_1.default)((0, map_1.default)(model, function (node) { return genCstNodeTypes(node); })));\n    if (options.includeVisitorInterface) {\n        contentParts = contentParts.concat(genVisitor(options.visitorInterfaceName, model));\n    }\n    return contentParts.join(\"\\n\\n\") + \"\\n\";\n}\nexports.genDts = genDts;\nfunction genCstNodeTypes(node) {\n    var nodeCstInterface = genNodeInterface(node);\n    var nodeChildrenInterface = genNodeChildrenType(node);\n    return [nodeCstInterface, nodeChildrenInterface];\n}\nfunction genNodeInterface(node) {\n    var nodeInterfaceName = getNodeInterfaceName(node.name);\n    var childrenTypeName = getNodeChildrenTypeName(node.name);\n    return \"export interface \".concat(nodeInterfaceName, \" extends CstNode {\\n  name: \\\"\").concat(node.name, \"\\\";\\n  children: \").concat(childrenTypeName, \";\\n}\");\n}\nfunction genNodeChildrenType(node) {\n    var typeName = getNodeChildrenTypeName(node.name);\n    return \"export type \".concat(typeName, \" = {\\n  \").concat((0, map_1.default)(node.properties, function (property) { return genChildProperty(property); }).join(\"\\n  \"), \"\\n};\");\n}\nfunction genChildProperty(prop) {\n    var typeName = buildTypeString(prop.type);\n    return \"\".concat(prop.name).concat(prop.optional ? \"?\" : \"\", \": \").concat(typeName, \"[];\");\n}\nfunction genVisitor(name, nodes) {\n    return \"export interface \".concat(name, \"<IN, OUT> extends ICstVisitor<IN, OUT> {\\n  \").concat((0, map_1.default)(nodes, function (node) { return genVisitorFunction(node); }).join(\"\\n  \"), \"\\n}\");\n}\nfunction genVisitorFunction(node) {\n    var childrenTypeName = getNodeChildrenTypeName(node.name);\n    return \"\".concat(node.name, \"(children: \").concat(childrenTypeName, \", param?: IN): OUT;\");\n}\nfunction buildTypeString(type) {\n    if ((0, isArray_1.default)(type)) {\n        var typeNames = (0, uniq_1.default)((0, map_1.default)(type, function (t) { return getTypeString(t); }));\n        var typeString = (0, reduce_1.default)(typeNames, function (sum, t) { return sum + \" | \" + t; });\n        return \"(\" + typeString + \")\";\n    }\n    else {\n        return getTypeString(type);\n    }\n}\nfunction getTypeString(type) {\n    if (type.kind === \"token\") {\n        return \"IToken\";\n    }\n    return getNodeInterfaceName(type.name);\n}\nfunction getNodeInterfaceName(ruleName) {\n    return (0, upperFirst_1.default)(ruleName) + \"CstNode\";\n}\nfunction getNodeChildrenTypeName(ruleName) {\n    return (0, upperFirst_1.default)(ruleName) + \"CstChildren\";\n}\n//# sourceMappingURL=generate.js.map"]},"metadata":{},"sourceType":"script"}