{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tokenMatcher = exports.createTokenInstance = exports.EOF = exports.createToken = exports.hasTokenLabel = exports.tokenName = exports.tokenLabel = void 0;\n\nvar isString_1 = __importDefault(require(\"lodash/isString\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\n\nvar lexer_public_1 = require(\"./lexer_public\");\n\nvar tokens_1 = require(\"./tokens\");\n\nfunction tokenLabel(tokType) {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\nexports.tokenLabel = tokenLabel;\n\nfunction tokenName(tokType) {\n  return tokType.name;\n}\n\nexports.tokenName = tokenName;\n\nfunction hasTokenLabel(obj) {\n  return (0, isString_1.default)(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nexports.hasTokenLabel = hasTokenLabel;\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\n\nfunction createToken(config) {\n  return createTokenInternal(config);\n}\n\nexports.createToken = createToken;\n\nfunction createTokenInternal(config) {\n  var pattern = config.pattern;\n  var tokenType = {};\n  tokenType.name = config.name;\n\n  if (!(0, isUndefined_1.default)(pattern)) {\n    tokenType.PATTERN = pattern;\n  }\n\n  if ((0, has_1.default)(config, PARENT)) {\n    throw \"The parent property is no longer supported.\\n\" + \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\";\n  }\n\n  if ((0, has_1.default)(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = config[CATEGORIES];\n  }\n\n  (0, tokens_1.augmentTokenTypes)([tokenType]);\n\n  if ((0, has_1.default)(config, LABEL)) {\n    tokenType.LABEL = config[LABEL];\n  }\n\n  if ((0, has_1.default)(config, GROUP)) {\n    tokenType.GROUP = config[GROUP];\n  }\n\n  if ((0, has_1.default)(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE];\n  }\n\n  if ((0, has_1.default)(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE];\n  }\n\n  if ((0, has_1.default)(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT];\n  }\n\n  if ((0, has_1.default)(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS];\n  }\n\n  if ((0, has_1.default)(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n  }\n\n  return tokenType;\n}\n\nexports.EOF = createToken({\n  name: \"EOF\",\n  pattern: lexer_public_1.Lexer.NA\n});\n(0, tokens_1.augmentTokenTypes)([exports.EOF]);\n\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n  return {\n    image: image,\n    startOffset: startOffset,\n    endOffset: endOffset,\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    endColumn: endColumn,\n    tokenTypeIdx: tokType.tokenTypeIdx,\n    tokenType: tokType\n  };\n}\n\nexports.createTokenInstance = createTokenInstance;\n\nfunction tokenMatcher(token, tokType) {\n  return (0, tokens_1.tokenStructuredMatcher)(token, tokType);\n}\n\nexports.tokenMatcher = tokenMatcher;","map":{"version":3,"sources":["../../../src/scan/tokens_public.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenMatcher = exports.createTokenInstance = exports.EOF = exports.createToken = exports.hasTokenLabel = exports.tokenName = exports.tokenLabel = void 0;\nvar isString_1 = __importDefault(require(\"lodash/isString\"));\nvar has_1 = __importDefault(require(\"lodash/has\"));\nvar isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\nvar lexer_public_1 = require(\"./lexer_public\");\nvar tokens_1 = require(\"./tokens\");\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexports.tokenLabel = tokenLabel;\nfunction tokenName(tokType) {\n    return tokType.name;\n}\nexports.tokenName = tokenName;\nfunction hasTokenLabel(obj) {\n    return (0, isString_1.default)(obj.LABEL) && obj.LABEL !== \"\";\n}\nexports.hasTokenLabel = hasTokenLabel;\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nfunction createToken(config) {\n    return createTokenInternal(config);\n}\nexports.createToken = createToken;\nfunction createTokenInternal(config) {\n    var pattern = config.pattern;\n    var tokenType = {};\n    tokenType.name = config.name;\n    if (!(0, isUndefined_1.default)(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if ((0, has_1.default)(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if ((0, has_1.default)(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    (0, tokens_1.augmentTokenTypes)([tokenType]);\n    if ((0, has_1.default)(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if ((0, has_1.default)(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if ((0, has_1.default)(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if ((0, has_1.default)(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if ((0, has_1.default)(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if ((0, has_1.default)(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if ((0, has_1.default)(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexports.EOF = createToken({ name: \"EOF\", pattern: lexer_public_1.Lexer.NA });\n(0, tokens_1.augmentTokenTypes)([exports.EOF]);\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image: image,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        startLine: startLine,\n        endLine: endLine,\n        startColumn: startColumn,\n        endColumn: endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType\n    };\n}\nexports.createTokenInstance = createTokenInstance;\nfunction tokenMatcher(token, tokType) {\n    return (0, tokens_1.tokenStructuredMatcher)(token, tokType);\n}\nexports.tokenMatcher = tokenMatcher;\n//# sourceMappingURL=tokens_public.js.map"]},"metadata":{},"sourceType":"script"}