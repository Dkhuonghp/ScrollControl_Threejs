{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\n\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar values_1 = __importDefault(require(\"lodash/values\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar follow_1 = require(\"../grammar/follow\");\n\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\n\nvar errors_public_1 = require(\"../errors_public\");\n\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\n\nvar recoverable_1 = require(\"./traits/recoverable\");\n\nvar looksahead_1 = require(\"./traits/looksahead\");\n\nvar tree_builder_1 = require(\"./traits/tree_builder\");\n\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\n\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\n\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\n\nvar error_handler_1 = require(\"./traits/error_handler\");\n\nvar context_assist_1 = require(\"./traits/context_assist\");\n\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\n\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\n\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\n\nexports.END_OF_FILE = (0, tokens_public_1.createTokenInstance)(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function recoveryValueFunc() {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\n\nfunction EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n\n  return function () {\n    return value;\n  };\n}\n\nexports.EMPTY_ALT = EMPTY_ALT;\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(tokenVocabulary, config) {\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if ((0, has_1.default)(config, \"ignoredIssues\")) {\n      throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" + \"For further details.\");\n    }\n\n    this.skipValidations = (0, has_1.default)(config, \"skipValidations\") ? config.skipValidations // casting assumes the end user passing the correct type\n    : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n\n\n  Parser.performSelfAnalysis = function (parserInstance) {\n    throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" + \"\\t\\nUse the **instance** method with the same name instead.\");\n  };\n\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        (0, utils_1.toFastProperties)(_this);\n      });\n\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording(); // Building the GAST\n\n\n          (0, forEach_1.default)(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast;\n\n            _this.TRACE_INIT(\"\".concat(currRuleName, \" Rule\"), function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n\n      var resolverErrors = [];\n\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = (0, gast_resolver_public_1.resolveGrammar)({\n          rules: (0, values_1.default)(_this.gastProductionsCache)\n        });\n        _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if ((0, isEmpty_1.default)(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = (0, gast_resolver_public_1.validateGrammar)({\n            rules: (0, values_1.default)(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: (0, values_1.default)(_this.tokensMap),\n            errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n          _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n        }\n      }); // this analysis may fail if the grammar is not perfectly valid\n\n\n      if ((0, isEmpty_1.default)(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = (0, follow_1.computeAllProdsFollows)((0, values_1.default)(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions((0, values_1.default)(_this.gastProductionsCache));\n        });\n      }\n\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !(0, isEmpty_1.default)(_this.definitionErrors)) {\n        defErrorsMsgs = (0, map_1.default)(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \".concat(defErrorsMsgs.join(\"\\n-------------------------------\\n\")));\n      }\n    });\n  }; // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n\n\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\n\nexports.Parser = Parser;\n(0, apply_mixins_1.applyMixins)(Parser, [recoverable_1.Recoverable, looksahead_1.LooksAhead, tree_builder_1.TreeBuilder, lexer_adapter_1.LexerAdapter, recognizer_engine_1.RecognizerEngine, recognizer_api_1.RecognizerApi, error_handler_1.ErrorHandler, context_assist_1.ContentAssist, gast_recorder_1.GastRecorder, perf_tracer_1.PerformanceTracer]);\n\nvar CstParser =\n/** @class */\nfunction (_super) {\n  __extends(CstParser, _super);\n\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = true;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n\n  return CstParser;\n}(Parser);\n\nexports.CstParser = CstParser;\n\nvar EmbeddedActionsParser =\n/** @class */\nfunction (_super) {\n  __extends(EmbeddedActionsParser, _super);\n\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = false;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n\n  return EmbeddedActionsParser;\n}(Parser);\n\nexports.EmbeddedActionsParser = EmbeddedActionsParser;","map":{"version":3,"sources":["../../../../src/parse/parser/parser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\nvar values_1 = __importDefault(require(\"lodash/values\"));\nvar has_1 = __importDefault(require(\"lodash/has\"));\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\nvar utils_1 = require(\"@chevrotain/utils\");\nvar follow_1 = require(\"../grammar/follow\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar errors_public_1 = require(\"../errors_public\");\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\nvar recoverable_1 = require(\"./traits/recoverable\");\nvar looksahead_1 = require(\"./traits/looksahead\");\nvar tree_builder_1 = require(\"./traits/tree_builder\");\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\nvar error_handler_1 = require(\"./traits/error_handler\");\nvar context_assist_1 = require(\"./traits/context_assist\");\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\nexports.END_OF_FILE = (0, tokens_public_1.createTokenInstance)(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nexports.EMPTY_ALT = EMPTY_ALT;\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if ((0, has_1.default)(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = (0, has_1.default)(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\n            var defErrorsMsgs;\n            _this.selfAnalysisDone = true;\n            var className = _this.className;\n            _this.TRACE_INIT(\"toFastProps\", function () {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                (0, utils_1.toFastProperties)(_this);\n            });\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\n                try {\n                    _this.enableRecording();\n                    // Building the GAST\n                    (0, forEach_1.default)(_this.definedRulesNames, function (currRuleName) {\n                        var wrappedRule = _this[currRuleName];\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        var recordedRuleGast;\n                        _this.TRACE_INIT(\"\".concat(currRuleName, \" Rule\"), function () {\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    _this.disableRecording();\n                }\n            });\n            var resolverErrors = [];\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\n                resolverErrors = (0, gast_resolver_public_1.resolveGrammar)({\n                    rules: (0, values_1.default)(_this.gastProductionsCache)\n                });\n                _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n            });\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if ((0, isEmpty_1.default)(resolverErrors) && _this.skipValidations === false) {\n                    var validationErrors = (0, gast_resolver_public_1.validateGrammar)({\n                        rules: (0, values_1.default)(_this.gastProductionsCache),\n                        maxLookahead: _this.maxLookahead,\n                        tokenTypes: (0, values_1.default)(_this.tokensMap),\n                        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n                        grammarName: className\n                    });\n                    _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if ((0, isEmpty_1.default)(_this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (_this.recoveryEnabled) {\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n                        var allFollows = (0, follow_1.computeAllProdsFollows)((0, values_1.default)(_this.gastProductionsCache));\n                        _this.resyncFollows = allFollows;\n                    });\n                }\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n                    _this.preComputeLookaheadFunctions((0, values_1.default)(_this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !(0, isEmpty_1.default)(_this.definitionErrors)) {\n                defErrorsMsgs = (0, map_1.default)(_this.definitionErrors, function (defError) { return defError.message; });\n                throw new Error(\"Parser Definition Errors detected:\\n \".concat(defErrorsMsgs.join(\"\\n-------------------------------\\n\")));\n            }\n        });\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\nexports.Parser = Parser;\n(0, apply_mixins_1.applyMixins)(Parser, [\n    recoverable_1.Recoverable,\n    looksahead_1.LooksAhead,\n    tree_builder_1.TreeBuilder,\n    lexer_adapter_1.LexerAdapter,\n    recognizer_engine_1.RecognizerEngine,\n    recognizer_api_1.RecognizerApi,\n    error_handler_1.ErrorHandler,\n    context_assist_1.ContentAssist,\n    gast_recorder_1.GastRecorder,\n    perf_tracer_1.PerformanceTracer\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var configClone = (0, clone_1.default)(config);\n        configClone.outputCst = true;\n        return _super.call(this, tokenVocabulary, configClone) || this;\n    }\n    return CstParser;\n}(Parser));\nexports.CstParser = CstParser;\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var configClone = (0, clone_1.default)(config);\n        configClone.outputCst = false;\n        return _super.call(this, tokenVocabulary, configClone) || this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\nexports.EmbeddedActionsParser = EmbeddedActionsParser;\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"script"}